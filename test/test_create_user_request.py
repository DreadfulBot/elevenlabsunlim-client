# coding: utf-8

"""
    🎤 Voicer API - Система озвучки текста

     ## 🎯 **Описание сервиса**  **Voicer API** — это современная система для преобразования текста в речь с использованием технологий ElevenLabs.  ### ✨ **Основные возможности:** - 🎭 **Более 50 голосов** различных языков и стилей - 🚀 **Быстрая обработка** больших текстов (до 500,000 символов) - 📊 **Отслеживание прогресса** выполнения задач в реальном времени - 🔒 **Безопасная авторизация** по токенам - 📱 **Простая интеграция** через REST API  ### 🌐 **Базовый URL:** ``` http://elevenlabs-unlimited.net:8000/api/v1 ```  ### 🔑 **Авторизация:** Все запросы требуют заголовок авторизации: ``` Authorization: Bearer YOUR_API_TOKEN ```  ### 📋 **Поддерживаемые модели:** - `eleven_multilingual_v2` — Многоязычная модель (рекомендуется) - `eleven_turbo_v2` — Быстрая модель для коротких текстов   - `eleven_turbo_v2_5` — Улучшенная быстрая модель - `eleven_v3` — Новейшая модель с улучшенным качеством - `eleven_flash_v2_5` — Просто быстрая модель, хз как подписать - `eleven_flash_v2` — Просто быстрая модель, хз как подписать ### 📞 **Поддержка:**  - 💬 Telegram: @mat3u     

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_user_request import CreateUserRequest

class TestCreateUserRequest(unittest.TestCase):
    """CreateUserRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateUserRequest:
        """Test CreateUserRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateUserRequest`
        """
        model = CreateUserRequest()
        if include_optional:
            return CreateUserRequest(
                telegram_user_id = '123456789',
                telegram_username = '',
                subscription_type = 'no_subscription',
                total_characters = 0.0,
                unlimited_days = 1.0,
                expires_datetime = ''
            )
        else:
            return CreateUserRequest(
                telegram_user_id = '123456789',
        )
        """

    def testCreateUserRequest(self):
        """Test CreateUserRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
