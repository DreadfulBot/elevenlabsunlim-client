# coding: utf-8

"""
    üé§ Voicer API - –°–∏—Å—Ç–µ–º–∞ –æ–∑–≤—É—á–∫–∏ —Ç–µ–∫—Å—Ç–∞

     ## üéØ **–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞**  **Voicer API** ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ —Ä–µ—á—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π ElevenLabs.  ### ‚ú® **–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:** - üé≠ **–ë–æ–ª–µ–µ 50 –≥–æ–ª–æ—Å–æ–≤** —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –∏ —Å—Ç–∏–ª–µ–π - üöÄ **–ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞** –±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤ (–¥–æ 500,000 —Å–∏–º–≤–æ–ª–æ–≤) - üìä **–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞** –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ - üîí **–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è** –ø–æ —Ç–æ–∫–µ–Ω–∞–º - üì± **–ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è** —á–µ—Ä–µ–∑ REST API  ### üåê **–ë–∞–∑–æ–≤—ã–π URL:** ``` http://elevenlabs-unlimited.net:8000/api/v1 ```  ### üîë **–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:** –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã —Ç—Ä–µ–±—É—é—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ``` Authorization: Bearer YOUR_API_TOKEN ```  ### üìã **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–æ–¥–µ–ª–∏:** - `eleven_multilingual_v2` ‚Äî –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–∞—è –º–æ–¥–µ–ª—å (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è) - `eleven_turbo_v2` ‚Äî –ë—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤   - `eleven_turbo_v2_5` ‚Äî –£–ª—É—á—à–µ–Ω–Ω–∞—è –±—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å - `eleven_v3` ‚Äî –ù–æ–≤–µ–π—à–∞—è –º–æ–¥–µ–ª—å —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º - `eleven_flash_v2_5` ‚Äî –ü—Ä–æ—Å—Ç–æ –±—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å, —Ö–∑ –∫–∞–∫ –ø–æ–¥–ø–∏—Å–∞—Ç—å - `eleven_flash_v2` ‚Äî –ü—Ä–æ—Å—Ç–æ –±—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å, —Ö–∑ –∫–∞–∫ –ø–æ–¥–ø–∏—Å–∞—Ç—å ### üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:**  - üí¨ Telegram: @mat3u     

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_user_response import CreateUserResponse

class TestCreateUserResponse(unittest.TestCase):
    """CreateUserResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateUserResponse:
        """Test CreateUserResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateUserResponse`
        """
        model = CreateUserResponse()
        if include_optional:
            return CreateUserResponse(
                success = True,
                message = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω',
                user_id = '550e8400-e29b-41d4-a716-446655440000',
                telegram_user_id = '123456789',
                api_token = 'abc123def456...',
                subscription_type = 'characters',
                total_characters = 56,
                subscription_expires_at = ''
            )
        else:
            return CreateUserResponse(
                success = True,
                message = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω',
                user_id = '550e8400-e29b-41d4-a716-446655440000',
                telegram_user_id = '123456789',
                api_token = 'abc123def456...',
                subscription_type = 'characters',
                total_characters = 56,
                subscription_expires_at = '',
        )
        """

    def testCreateUserResponse(self):
        """Test CreateUserResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
